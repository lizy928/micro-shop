/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */


buildscript {
    ext {
        springBootVersion = '2.0.6.RELEASE'
    }
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven{ url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.4'
}


// 所有子项目的通用配置
configure(allprojects) { project ->
    apply plugin: 'java'
    apply plugin: 'idea'

    version = '1.0'

    // JVM 版本号要求
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    //定义版本号
    ext {
        springCloudVersion          = 'Dalston.RELEASE'
        springBootVersion           = '2.0.6.RELEASE'
        logbackkafkaVersion         = "0.1.0"
        servletapiVersion           = "4.0.1"
        jedisVersion                = "2.7.3"
        commonslang3Version         = "3.3.2"
        commonsioVersion            = "1.3.2"
        commonslangVersion          = "2.6"
        fastjsonVersion             = "1.2.28"
        slf4jVersion                = "1.7.2"
        swagger2Version             = "2.6.1"

        mysqlVersion                = "5.1.32"
        springBootMyBatisVersion    = '1.2.0'
        springBootpagehelperVersion = '1.2.3'
        springBootDruidVersion      = '1.1.10'
        springBootActuatorVersion   = '2.0.6.RELEASE'

        eurekaServerVersion         = '2.0.2.RELEASE'
        eurekaVersion               = '1.4.6.RELEASE'
        zuulVersion                 = '1.4.6.RELEASE'
        feignVersion                = '1.4.6.RELEASE'
        hystrixVersion              = '2.0.2.RELEASE'

        apolloclientVersion         = "0.8.0"
        springBootRedisVersion      = '2.0.6.RELEASE'
        zipKinVersion               = '2.0.1.RELEASE'
        amapVersion                 = '2.0.0.RELEASE'
        apolloclientVersion         = '1.1.1'

        solrVersion                 = '4.0.1.RELEASE'

        beetl_starterVersion        = "0.0.3"
        log4jVersion                = "1.2.17"
        lombokVersion               = "1.18.4"

    }

    repositories {
        //mavenCentral()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven{ url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
    }

    jar {
        manifest {
            attributes("Implementation-Title": "Gradle")
        }
    }

    configurations {
        // 所有需要忽略的包定义在此
        /*all*.exclude group: 'commons-httpclient'
        all*.exclude group: 'commons-logging'
        all*.exclude group: 'commons-beanutils', module: 'commons-beanutils'*/
    }

    dependencies {
        // 通用依赖

        // 测试依赖
        testCompile(
                "junit:junit:4.12"
        )

    }
}

project("shop-common") {
    description = "shop-common"

    dependencies {
        //compileOnly("javax.servlet:javax.servlet-api:${servletapiVersion}")
        compileOnly("redis.clients:jedis:${jedisVersion}")
        compile("org.apache.commons:commons-lang3:${commonslang3Version}")
        compile("commons-lang:commons-lang:${commonslangVersion}")
        compile("com.alibaba:fastjson:${fastjsonVersion}")
        compile("org.slf4j:slf4j-api:${slf4jVersion}")
        compile("io.springfox:springfox-swagger-ui:${swagger2Version}")
        compile("io.springfox:springfox-swagger2:${swagger2Version}")
    }
}

project("shop-common-mapper") {
    description = "shop-common-mapper"

    dependencies {
        compile(project(":shop-common-pojo"))
        compile("mysql:mysql-connector-java:${mysqlVersion}")
        compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:${springBootMyBatisVersion}")
        compile("com.github.pagehelper:pagehelper-spring-boot-starter:${springBootpagehelperVersion}")
        compile("log4j:log4j:${log4jVersion}")
        compile("com.alibaba:druid-spring-boot-starter:${springBootDruidVersion}")
        compile fileTree(dir: 'src', includes: ['/*.xml'])
    }
    jar {
        //指定包名
        baseName = 'shop-common-mapper'

        //指定包含的文件
        from('src/main/resources') {
            include '**/*.xml'
        }

    }
}

project("shop-common-pojo") {
    description = "shop-common-pojo"

    dependencies {
        compile("org.projectlombok:lombok:${lombokVersion}")
    }
}

project("shop-eureka") {
    description = "shop-eureka"

    dependencies {
        compile("org.springframework.cloud:spring-cloud-starter-eureka-server:1.2.3.RELEASE")
        compile("com.github.danielwegener:logback-kafka-appender:${logbackkafkaVersion}")
        compile("javax.servlet:javax.servlet-api:${servletapiVersion}")
        //compile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    }
}


project("shop-mgt") {
    description = "shop-mgt"

    dependencies {
        compile(project(":shop-common"))
        compile(project(":shop-common-pojo"))
        compile(project(":shop-common-mapper"))
        compile("mysql:mysql-connector-java:${mysqlVersion}")
        compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:${springBootMyBatisVersion}")
        compile("com.github.pagehelper:pagehelper-spring-boot-starter:${springBootpagehelperVersion}")
        compile("com.alibaba:druid-spring-boot-starter:${springBootDruidVersion}")
        compile("org.springframework.boot:spring-boot-starter:${springBootVersion}")
        compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
        compile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
        compile("org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}")
        compile("net.sourceforge.nekohtml:nekohtml:1.9.22")
        compile("org.springframework.boot:spring-boot-starter-data-redis:${springBootRedisVersion}")

    }
}

project("shop-service-cart-api") {
    description = "shop-service-cart-api"

    dependencies {
        compile(project(":shop-common"))
        compile(project(":shop-common-pojo"))
        compile("org.springframework.cloud:spring-cloud-starter-feign:${feignVersion}")
    }
}

project("shop-service-cart") {
    description = "shop-service-cart"

    dependencies {
        compile(project(":shop-service-cart-api"))
        compile(project(":shop-common-mapper"))
        compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-server:${eurekaServerVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-zipkin:${zipKinVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-netflix-hystrix:${hystrixVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-bus-amqp:${amapVersion}")
        compile("com.ctrip.framework.apollo:apollo-client:${apolloclientVersion}")
//        compile("org.springframework.data:spring-data-redis") //暂时不使用
        compile("org.springframework.boot:spring-boot-starter-data-redis:${springBootRedisVersion}")
        compile("org.freemarker:freemarker:2.3.9")
    }
}


project("shop-service-item-api") {
    description = "shop-service-item-api"

    dependencies {
        compile(project(":shop-common"))
        compile(project(":shop-common-pojo"))
        compile("org.springframework.cloud:spring-cloud-starter-feign:${feignVersion}")
    }
}
project("shop-service-item") {
    description = "shop-service-item"

    dependencies {
        compile(project(":shop-service-item-api"))
        compile(project(":shop-common-mapper"))
        compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-server:${eurekaServerVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-zipkin:${zipKinVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-netflix-hystrix:${hystrixVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-bus-amqp:${amapVersion}")
        compile("com.ctrip.framework.apollo:apollo-client:${apolloclientVersion}")
//        compile("org.springframework.data:spring-data-redis") //暂时不使用
        compile("org.springframework.boot:spring-boot-starter-data-redis:${springBootRedisVersion}")
        compile("org.freemarker:freemarker:2.3.9")
    }
}

project("shop-service-notify-api") {
    description = "shop-serviced-notify-api"

    dependencies {
        compile(project(":shop-common"))
        compile(project(":shop-common-pojo"))
        compile("org.springframework.cloud:spring-cloud-starter-feign:${feignVersion}")
    }
}
project("shop-service-notify") {
    description = "shop-service-notify"

    dependencies {
        compile(project(":shop-service-notify-api"))
        compile(project(":shop-common-mapper"))
        compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-server:${eurekaServerVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-zipkin:${zipKinVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-netflix-hystrix:${hystrixVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-bus-amqp:${amapVersion}")
        compile("com.ctrip.framework.apollo:apollo-client:${apolloclientVersion}")
//        compile("org.springframework.data:spring-data-redis") //暂时不使用
        compile("org.springframework.boot:spring-boot-starter-data-redis:${springBootRedisVersion}")
    }
}

project("shop-service-order-api") {
    description = "shop-service-order-api"

    dependencies {
        compile(project(":shop-common"))
        compile(project(":shop-common-pojo"))
        compile("org.springframework.cloud:spring-cloud-starter-feign:${feignVersion}")
    }
}
project("shop-service-order") {
    description = "shop-service-order"

    dependencies {
        compile(project(":shop-service-order-api"))
        compile(project(":shop-service-sso-api"))
        compile(project(":shop-common-mapper"))
        compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-server:${eurekaServerVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-zipkin:${zipKinVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-netflix-hystrix:${hystrixVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-bus-amqp:${amapVersion}")
        compile("com.ctrip.framework.apollo:apollo-client:${apolloclientVersion}")
//        compile("org.springframework.data:spring-data-redis") //暂时不使用
        compile("org.springframework.boot:spring-boot-starter-data-redis:${springBootRedisVersion}")
        compile("org.freemarker:freemarker:2.3.9")
    }
}


project("shop-service-portal-api") {
    description = "shop-service-portal-api"

    dependencies {
        compile(project(":shop-common"))
        compile(project(":shop-common-pojo"))
        compile("org.springframework.cloud:spring-cloud-starter-feign:${feignVersion}")
    }
}
project("shop-service-portal") {
    description = "shop-service-portal"

    dependencies {
        compile(project(":shop-service-portal-api"))
        compile(project(":shop-common-mapper"))
        compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-server:${eurekaServerVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-zipkin:${zipKinVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-netflix-hystrix:${hystrixVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-bus-amqp:${amapVersion}")
        compile("com.ctrip.framework.apollo:apollo-client:${apolloclientVersion}")
//        compile("org.springframework.data:spring-data-redis") //暂时不使用
        compile("org.springframework.boot:spring-boot-starter-data-redis:${springBootRedisVersion}")
        compile("javax.servlet:javax.servlet-api:${servletapiVersion}")
        compile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    }
}

project("shop-service-search-api") {
    description = "shop-service-search-api"

    dependencies {
        compile(project(":shop-common"))
        compile(project(":shop-common-pojo"))
        compile("org.springframework.cloud:spring-cloud-starter-feign:${feignVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-openfeign:2.0.2.RELEASE")
    }
}
project("shop-service-search") {
    description = "shop-service-search"

    dependencies {
        compile(project(":shop-service-search-api"))
        compile(project(":shop-common-mapper"))
        compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-server:${eurekaServerVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-zipkin:${zipKinVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-netflix-hystrix:${hystrixVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-bus-amqp:${amapVersion}")
        compile("com.ctrip.framework.apollo:apollo-client:${apolloclientVersion}")
        compile("org.springframework.data:spring-data-solr:${solrVersion}")
    }
}

project("shop-service-sso-api") {
    description = "shop-serviced-sso-api"

    dependencies {
        compile(project(":shop-common"))
        compile(project(":shop-common-pojo"))
        compile("org.springframework.cloud:spring-cloud-starter-feign:${feignVersion}")
    }
}
project("shop-service-sso") {
    description = "shop-service-sso"

    dependencies {
        compile(project(":shop-service-sso-api"))
        compile(project(":shop-common-mapper"))
        compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-server:${eurekaServerVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-zipkin:${zipKinVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-netflix-hystrix:${hystrixVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-bus-amqp:${amapVersion}")
        compile("com.ctrip.framework.apollo:apollo-client:${apolloclientVersion}")
//        compile("org.springframework.data:spring-data-redis") //暂时不使用
        compile("org.springframework.boot:spring-boot-starter-data-redis:${springBootRedisVersion}")
        compile("org.freemarker:freemarker:2.3.9")
    }
}

project("shop-web-cart") {
    description = "shop-web-cart"

    dependencies {
        compile(project(":shop-service-cart-api"))
        compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-server:${eurekaServerVersion}")
        compile("com.ctrip.framework.apollo:apollo-client:${apolloclientVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-netflix-hystrix:${hystrixVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-bus-amqp:${amapVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-zipkin:${zipKinVersion}")
        compile("org.springframework.boot:spring-boot-starter-aop")
        compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
        compile("org.springframework.retry:spring-retry")
        compile("com.piggsoft:beetl-spring-boot-starter:${beetl_starterVersion}")
        compile("org.springframework.boot:spring-boot-starter-data-redis:${springBootRedisVersion}")
    }
}

project("shop-web-item") {
    description = "shop-web-item"

    dependencies {
        compile(project(":shop-service-item-api"))
        compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-server:${eurekaServerVersion}")
        compile("com.ctrip.framework.apollo:apollo-client:${apolloclientVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-netflix-hystrix:${hystrixVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-bus-amqp:${amapVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-zipkin:${zipKinVersion}")
        compile("org.springframework.boot:spring-boot-starter-aop")
        compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
        compile("org.springframework.retry:spring-retry")
        compile("com.piggsoft:beetl-spring-boot-starter:${beetl_starterVersion}")

    }
}

project("shop-web-order") {
    description = "shop-web-order"

    dependencies {
        compile(project(":shop-service-order-api"))
        compile(project(":shop-service-notify-api"))
        compile(project(":shop-service-sso-api"))
        compile(project(":shop-service-cart-api"))
        compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-server:${eurekaServerVersion}")
        compile("com.ctrip.framework.apollo:apollo-client:${apolloclientVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-netflix-hystrix:${hystrixVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-bus-amqp:${amapVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-zipkin:${zipKinVersion}")
        compile("org.springframework.boot:spring-boot-starter-aop")
        compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
        compile("org.springframework.retry:spring-retry")
        compile("com.piggsoft:beetl-spring-boot-starter:${beetl_starterVersion}")
        compile("org.springframework.boot:spring-boot-starter-data-redis:${springBootRedisVersion}")
    }
}

project("shop-web-portal") {
    description = "shop-web-portal"

    dependencies {
        compile(project(":shop-service-portal-api"))
        compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-server:${eurekaServerVersion}")
        compile("com.ctrip.framework.apollo:apollo-client:${apolloclientVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-netflix-hystrix:${hystrixVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-bus-amqp:${amapVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-zipkin:${zipKinVersion}")
        compile("org.springframework.boot:spring-boot-starter-aop")
        compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
        compile("org.springframework.retry:spring-retry")
        compile("com.ibeetl:beetl:2.9.3")
        compile("javax.servlet:javax.servlet-api:${servletapiVersion}")
    }
}

project("shop-web-search") {
    description = "shop-web-search"

    dependencies {
        compile(project(":shop-service-search-api"))
        compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-server:${eurekaServerVersion}")
        compile("com.ctrip.framework.apollo:apollo-client:${apolloclientVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-netflix-hystrix:${hystrixVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-bus-amqp:${amapVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-zipkin:${zipKinVersion}")
        compile("org.springframework.boot:spring-boot-starter-aop")
        compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
        compile("org.springframework.retry:spring-retry")
        compile("com.piggsoft:beetl-spring-boot-starter:${beetl_starterVersion}")
    }
}

project("shop-web-sso") {
    description = "shop-web-sso"

    dependencies {
        compile(project(":shop-service-sso-api"))
        compile(project(":shop-service-notify-api"))
        compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-server:${eurekaServerVersion}")
        compile("com.ctrip.framework.apollo:apollo-client:${apolloclientVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-netflix-hystrix:${hystrixVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-bus-amqp:${amapVersion}")
        compile("org.springframework.cloud:spring-cloud-starter-zipkin:${zipKinVersion}")
        compile("org.springframework.boot:spring-boot-starter-aop")
        compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
        compile("org.springframework.retry:spring-retry")
        compile("com.ibeetl:beetl:2.9.3")
        compile("org.springframework.boot:spring-boot-starter-data-redis:${springBootRedisVersion}")
    }
}